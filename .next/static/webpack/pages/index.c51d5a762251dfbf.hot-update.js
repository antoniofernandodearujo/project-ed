"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("pages/index",{

/***/ "./src/core/ListaSimplesmenteEncadeada.ts":
/*!************************************************!*\
  !*** ./src/core/ListaSimplesmenteEncadeada.ts ***!
  \************************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"ListaSimplesmenteEncadeada\": function() { return /* binding */ ListaSimplesmenteEncadeada; }\n/* harmony export */ });\nclass ListNode {\n    constructor(value){\n        this.value = value;\n    }\n}\nclass ListaSimplesmenteEncadeada {\n    addInList(num, pos) {\n        const number = parseInt(String(num));\n        const position = parseInt(String(pos)) - 1;\n        // Verifica se a posição é válida\n        if (position < 0 || position > this.length) {\n            console.log(\"Posi\\xe7\\xe3o inv\\xe1lida.\");\n            return;\n        }\n        // Verifica se a lista já atingiu o tamanho máximo\n        if (this.length === this.max) {\n            console.log(\"A lista j\\xe1 est\\xe1 no tamanho m\\xe1ximo.\");\n            return;\n        }\n        // Verifica se o número já existe na lista\n        let currentNode = this.head;\n        let prevNode = undefined;\n        while(currentNode){\n            if (currentNode.value === number) {\n                console.log(\"O n\\xfamero \".concat(number, \" j\\xe1 existe na lista.\"));\n                return;\n            }\n            prevNode = currentNode;\n            currentNode = currentNode.next;\n        }\n        const newNode = new ListNode(number);\n        // Insere o novo nó no início da lista\n        if (position === 0 || !prevNode) {\n            newNode.next = this.head;\n            this.head = newNode;\n        } else {\n            prevNode.next = newNode;\n            newNode.next = currentNode;\n        }\n        this.length++;\n    }\n    constructor(max, head){\n        this.max = max;\n        this.head = head;\n        this.length = 0;\n    }\n}\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports on update so we can compare the boundary\n                // signatures.\n                module.hot.dispose(function (data) {\n                    data.prevExports = currentExports;\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevExports !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevExports !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvY29yZS9MaXN0YVNpbXBsZXNtZW50ZUVuY2FkZWFkYS50cy5qcyIsIm1hcHBpbmdzIjoiOzs7O0FBWUEsTUFBTUE7SUFJSkMsWUFBWUMsS0FBYSxDQUFFO1FBQ3pCLElBQUksQ0FBQ0EsS0FBSyxHQUFHQTtJQUNmO0FBQ0Y7QUFFTyxNQUFNQztJQVdYQyxVQUFVQyxHQUFXLEVBQUVDLEdBQVcsRUFBRTtRQUNsQyxNQUFNQyxTQUFTQyxTQUFTQyxPQUFPSjtRQUMvQixNQUFNSyxXQUFXRixTQUFTQyxPQUFPSCxRQUFRO1FBRXpDLGlDQUFpQztRQUNqQyxJQUFJSSxXQUFXLEtBQUtBLFdBQVcsSUFBSSxDQUFDQyxNQUFNLEVBQUU7WUFDMUNDLFFBQVFDLEdBQUcsQ0FBQztZQUNaO1FBQ0YsQ0FBQztRQUVELGtEQUFrRDtRQUNsRCxJQUFJLElBQUksQ0FBQ0YsTUFBTSxLQUFLLElBQUksQ0FBQ0csR0FBRyxFQUFFO1lBQzVCRixRQUFRQyxHQUFHLENBQUM7WUFDWjtRQUNGLENBQUM7UUFFRCwwQ0FBMEM7UUFDMUMsSUFBSUUsY0FBYyxJQUFJLENBQUNDLElBQUk7UUFDM0IsSUFBSUMsV0FBaUNDO1FBQ3JDLE1BQU9ILFlBQWE7WUFDbEIsSUFBSUEsWUFBWWIsS0FBSyxLQUFLSyxRQUFRO2dCQUNoQ0ssUUFBUUMsR0FBRyxDQUFDLGVBQW1CLE9BQVBOLFFBQU87Z0JBQy9CO1lBQ0YsQ0FBQztZQUNEVSxXQUFXRjtZQUNYQSxjQUFjQSxZQUFZSSxJQUFJO1FBQ2hDO1FBRUEsTUFBTUMsVUFBVSxJQUFJcEIsU0FBU087UUFFN0Isc0NBQXNDO1FBQ3RDLElBQUlHLGFBQWEsS0FBSyxDQUFDTyxVQUFVO1lBQy9CRyxRQUFRRCxJQUFJLEdBQUcsSUFBSSxDQUFDSCxJQUFJO1lBQ3hCLElBQUksQ0FBQ0EsSUFBSSxHQUFHSTtRQUNkLE9BRUs7WUFDSEgsU0FBU0UsSUFBSSxHQUFHQztZQUNoQkEsUUFBUUQsSUFBSSxHQUFHSjtRQUNqQixDQUFDO1FBRUQsSUFBSSxDQUFDSixNQUFNO0lBQ2I7SUFoREFWLFlBQVlhLEdBQVcsRUFBRUUsSUFBZSxDQUFFO1FBQ3hDLElBQUksQ0FBQ0YsR0FBRyxHQUFHQTtRQUNYLElBQUksQ0FBQ0UsSUFBSSxHQUFHQTtRQUNaLElBQUksQ0FBQ0wsTUFBTSxHQUFHO0lBQ2hCO0FBNkNGLENBQUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vc3JjL2NvcmUvTGlzdGFTaW1wbGVzbWVudGVFbmNhZGVhZGEudHM/ZWU2YiJdLCJzb3VyY2VzQ29udGVudCI6WyJpbnRlcmZhY2UgTGlzdE5vZGVJbnRlcmZhY2Uge1xuICB2YWx1ZTogbnVtYmVyO1xuICBuZXh0PzogTGlzdE5vZGU7XG59XG5cbmludGVyZmFjZSBMaXN0SW50ZXJmYWNlIHtcbiAgbWF4OiBudW1iZXI7XG4gIGhlYWQ/OiBMaXN0Tm9kZTtcbiAgbGVuZ3RoOiBudW1iZXI7XG4gIGFkZEluTGlzdDogKG51bTogbnVtYmVyLCBwb3M6IG51bWJlcikgPT4gdm9pZDtcbn1cblxuY2xhc3MgTGlzdE5vZGUgaW1wbGVtZW50cyBMaXN0Tm9kZUludGVyZmFjZSB7XG4gIHZhbHVlOiBudW1iZXI7XG4gIG5leHQ/OiBMaXN0Tm9kZTtcblxuICBjb25zdHJ1Y3Rvcih2YWx1ZTogbnVtYmVyKSB7XG4gICAgdGhpcy52YWx1ZSA9IHZhbHVlO1xuICB9XG59XG5cbmV4cG9ydCBjbGFzcyBMaXN0YVNpbXBsZXNtZW50ZUVuY2FkZWFkYSBpbXBsZW1lbnRzIExpc3RJbnRlcmZhY2Uge1xuICBtYXg6IG51bWJlcjtcbiAgaGVhZD86IExpc3ROb2RlO1xuICBsZW5ndGg6IG51bWJlcjtcblxuICBjb25zdHJ1Y3RvcihtYXg6IG51bWJlciwgaGVhZD86IExpc3ROb2RlKSB7XG4gICAgdGhpcy5tYXggPSBtYXg7XG4gICAgdGhpcy5oZWFkID0gaGVhZDtcbiAgICB0aGlzLmxlbmd0aCA9IDA7XG4gIH1cblxuICBhZGRJbkxpc3QobnVtOiBudW1iZXIsIHBvczogbnVtYmVyKSB7XG4gICAgY29uc3QgbnVtYmVyID0gcGFyc2VJbnQoU3RyaW5nKG51bSkpO1xuICAgIGNvbnN0IHBvc2l0aW9uID0gcGFyc2VJbnQoU3RyaW5nKHBvcykpIC0gMTtcblxuICAgIC8vIFZlcmlmaWNhIHNlIGEgcG9zacOnw6NvIMOpIHbDoWxpZGFcbiAgICBpZiAocG9zaXRpb24gPCAwIHx8IHBvc2l0aW9uID4gdGhpcy5sZW5ndGgpIHtcbiAgICAgIGNvbnNvbGUubG9nKCdQb3Npw6fDo28gaW52w6FsaWRhLicpO1xuICAgICAgcmV0dXJuO1xuICAgIH1cblxuICAgIC8vIFZlcmlmaWNhIHNlIGEgbGlzdGEgasOhIGF0aW5naXUgbyB0YW1hbmhvIG3DoXhpbW9cbiAgICBpZiAodGhpcy5sZW5ndGggPT09IHRoaXMubWF4KSB7XG4gICAgICBjb25zb2xlLmxvZygnQSBsaXN0YSBqw6EgZXN0w6Egbm8gdGFtYW5obyBtw6F4aW1vLicpO1xuICAgICAgcmV0dXJuO1xuICAgIH1cblxuICAgIC8vIFZlcmlmaWNhIHNlIG8gbsO6bWVybyBqw6EgZXhpc3RlIG5hIGxpc3RhXG4gICAgbGV0IGN1cnJlbnROb2RlID0gdGhpcy5oZWFkO1xuICAgIGxldCBwcmV2Tm9kZTogTGlzdE5vZGUgfCB1bmRlZmluZWQgPSB1bmRlZmluZWQ7XG4gICAgd2hpbGUgKGN1cnJlbnROb2RlKSB7XG4gICAgICBpZiAoY3VycmVudE5vZGUudmFsdWUgPT09IG51bWJlcikge1xuICAgICAgICBjb25zb2xlLmxvZyhgTyBuw7ptZXJvICR7bnVtYmVyfSBqw6EgZXhpc3RlIG5hIGxpc3RhLmApO1xuICAgICAgICByZXR1cm47XG4gICAgICB9XG4gICAgICBwcmV2Tm9kZSA9IGN1cnJlbnROb2RlO1xuICAgICAgY3VycmVudE5vZGUgPSBjdXJyZW50Tm9kZS5uZXh0O1xuICAgIH1cblxuICAgIGNvbnN0IG5ld05vZGUgPSBuZXcgTGlzdE5vZGUobnVtYmVyKTtcblxuICAgIC8vIEluc2VyZSBvIG5vdm8gbsOzIG5vIGluw61jaW8gZGEgbGlzdGFcbiAgICBpZiAocG9zaXRpb24gPT09IDAgfHwgIXByZXZOb2RlKSB7XG4gICAgICBuZXdOb2RlLm5leHQgPSB0aGlzLmhlYWQ7XG4gICAgICB0aGlzLmhlYWQgPSBuZXdOb2RlO1xuICAgIH1cbiAgICAvLyBJbnNlcmUgbyBub3ZvIG7DsyBubyBtZWlvIG91IG5vIGZpbSBkYSBsaXN0YVxuICAgIGVsc2Uge1xuICAgICAgcHJldk5vZGUubmV4dCA9IG5ld05vZGU7XG4gICAgICBuZXdOb2RlLm5leHQgPSBjdXJyZW50Tm9kZTtcbiAgICB9XG5cbiAgICB0aGlzLmxlbmd0aCsrO1xuICB9XG59XG4iXSwibmFtZXMiOlsiTGlzdE5vZGUiLCJjb25zdHJ1Y3RvciIsInZhbHVlIiwiTGlzdGFTaW1wbGVzbWVudGVFbmNhZGVhZGEiLCJhZGRJbkxpc3QiLCJudW0iLCJwb3MiLCJudW1iZXIiLCJwYXJzZUludCIsIlN0cmluZyIsInBvc2l0aW9uIiwibGVuZ3RoIiwiY29uc29sZSIsImxvZyIsIm1heCIsImN1cnJlbnROb2RlIiwiaGVhZCIsInByZXZOb2RlIiwidW5kZWZpbmVkIiwibmV4dCIsIm5ld05vZGUiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./src/core/ListaSimplesmenteEncadeada.ts\n"));

/***/ })

});