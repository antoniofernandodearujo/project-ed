"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("pages/index",{

/***/ "./src/core/ListaSimplesmenteEncadeada.ts":
/*!************************************************!*\
  !*** ./src/core/ListaSimplesmenteEncadeada.ts ***!
  \************************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"ListaSimplesmenteEncadeada\": function() { return /* binding */ ListaSimplesmenteEncadeada; }\n/* harmony export */ });\nclass No {\n    constructor(valor){\n        this.valor = valor;\n        this.proximo = null;\n    }\n}\nclass ListaSimplesmenteEncadeada {\n    getCabeca() {\n        return this.cabeca;\n    }\n    getTamanho() {\n        return this.tamanho;\n    }\n    adicionar(valor, posicao) {\n        if (posicao <= 0 || posicao > this.tamanho + 1) {\n            throw new Error(\"Posi\\xe7\\xe3o inv\\xe1lida.\");\n        }\n        const novoNo = new No(valor);\n        if (posicao === 1) {\n            novoNo.proximo = this.cabeca;\n            this.cabeca = novoNo;\n        } else {\n            let anterior = null;\n            let atual = this.cabeca;\n            let indice = 1;\n            while(atual != null && indice < posicao){\n                anterior = atual;\n                atual = atual.proximo;\n                indice++;\n            }\n            novoNo.proximo = atual;\n            anterior.proximo = novoNo;\n        }\n        this.tamanho++;\n    }\n    /**\r\n   * Eu tive que criar 2 métodos para remoção e para a busca\r\n   * porque tava dando muito erro, se lembrar de alguma coisa\r\n   * ou fazer alguma validação.\r\n   */ removerPorPosicao(posicao) {\n        if (this.tamanho === 0) {\n            throw new Error(\"Lista vazia.\");\n        }\n        if (posicao <= 0 || posicao > this.tamanho) {\n            throw new Error(\"Posi\\xe7\\xe3o inv\\xe1lida.\");\n        }\n        if (posicao === 1) {\n            this.cabeca = this.cabeca.proximo;\n        } else {\n            let indice = 1;\n            let noAtual = this.cabeca;\n            let noAnterior = null;\n            while(indice < posicao){\n                noAnterior = noAtual;\n                noAtual = noAtual.proximo;\n                indice++;\n            }\n            noAnterior.proximo = noAtual.proximo;\n        }\n        this.tamanho--;\n    }\n    removerPorValor(valor) {\n        if (this.tamanho === 0) {\n            throw new Error(\"Lista vazia.\");\n        }\n        let noAtual = this.cabeca;\n        let noAnterior = null;\n        while(noAtual !== null){\n            if (noAtual.valor === valor) {\n                if (noAnterior === null) {\n                    this.cabeca = noAtual.proximo;\n                } else {\n                    noAnterior.proximo = noAtual.proximo;\n                }\n                this.tamanho--;\n                return;\n            }\n            noAnterior = noAtual;\n            noAtual = noAtual.proximo;\n        }\n        throw new Error(\"Valor n\\xe3o encontrado na lista.\");\n    }\n    buscarPorPosicao(posicao) {\n        if (posicao <= 0 || posicao > this.tamanho) {\n            return null;\n        }\n        let noAtual = this.cabeca;\n        let indice = 1;\n        while(indice < posicao){\n            noAtual = noAtual.proximo;\n            indice++;\n        }\n        return noAtual;\n    }\n    buscarPorValor(valor) {\n        let noAtual = this.cabeca;\n        while(noAtual !== null){\n            if (noAtual.valor === valor) {\n                return noAtual;\n            }\n            noAtual = noAtual.proximo;\n        }\n        return null;\n    }\n    toArray() {\n        const elementos = [];\n        let atual = this.cabeca;\n        while(atual != null){\n            elementos.push(atual.valor);\n            atual = atual.proximo;\n        }\n        return elementos;\n    }\n    constructor(){\n        this.cabeca = null;\n        this.tamanho = 0;\n    }\n}\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports on update so we can compare the boundary\n                // signatures.\n                module.hot.dispose(function (data) {\n                    data.prevExports = currentExports;\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevExports !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevExports !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/core/ListaSimplesmenteEncadeada.ts\n"));

/***/ })

});